/* pseudoselectores: elementos que no existen en HTML (Ctrl+K en VS Code para comentarios)*/
:root {
  --blanco: #ffffff;
  --oscuro: #212121;  /* Custom properties */
  --primario: #ffc107;  /* variables en CSS */
  --secundario: #0097a7;
  --gris: #757575;
  --grisClaro: #dfe9f3;
}

/* Globales */  
/* Hack para reiniciar tamaño del html en general */
html {
  font-size: 62.5%;
  box-sizing: border-box; /* snipet para trabajar mejor con box model */
  scroll-snap-type: y mandatory;  /* Scroll snap de arriba hacia abajo (x si se requiere scroll de lado a lado) */
}
/* Scroll Snap */
.navegacion-principal,
.servicios,
.formulario {
  scroll-snap-align: center;
  scroll-snap-stop: always; /* Detener el Scroll en las clases seleccionadas */
}
*, *:before, *:after {  /* * = selector universal */
  box-sizing: inherit;
}
body {
  font-size: 16px;  /* 1rem = 10px */
  font-family: 'Krub', sans-serif;  /* font-weight: 400(normal), 700(bold) */
  background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);  /* Degradado en CSS */
}
.contenedor {
  max-width: 120rem;
  margin: 0 auto; /* Acota los valores a 0(para arriba y abajo) auto(para derecha e izquierda) */
}
.boton {
  background-color: var(--secundario);
  color: var(--blanco);
  margin-top: 3rem;
  padding: 1rem 3rem;
  font-size: 2rem;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: bold;
  width: 90%;
  text-align: center;
  border: none;
}
@media (min-width: 768px) {
  .boton {
    width: auto;
  }
}
.boton:hover {
  cursor: pointer;
}
.sombra {
  -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
  -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
  box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
  background-color: var(--blanco);
  padding: 2rem;
  border-radius: 1rem;
}

/* Tipografia */
h1 {
  font-size: 3.8rem;
}
h2 {
  font-size: 2.8rem;
}
h3 {
  font-size: 1.8rem;
}
h1, h2, h3 {
  text-align: center;
}
/*.titulo { Selector de clase
  text-align: center;
  font-size: 3.8rem;
}*/

/* Titulos */
.titulo span {
  font-size: 2rem;
}

/* Utilidades */
.w-sm-100 {
  width: 100%;
}
@media (min-width: 768px) {
  .w-sm-100 {
    width: auto;
  }
}
.flex {
  display: flex;
}
.alinear-derecha {
  justify-content: flex-end;
}

/* Navegacion principal */
.nav-bg { /* Ejemplo de Utility First */
  background-color: var(--secundario);
}
.navegacion-principal {
  display: flex;  /* Se utiliza para alinear elementos */
  flex-direction: column;
}
/* Responsive Web Design: para adaptar los sitios web a diferentes dispositivos */
@media (min-width: 768px) { /* Media Query: condiciones para adaptar los sitios web */
  .navegacion-principal {
    flex-direction: row;
    justify-content: space-between; /* Se activa con flexbox, para separacion entre elementos */
  }
}
.navegacion-principal a { /* Ejemplo de Modulo */
  display: block;
  text-align: center;
  color: var(--blanco);
  text-decoration: none;
  padding: 1rem;  /* Representa los cuatro puntos (arriba, derecha, abajo, izquierda) */
  font-weight: bold;
  font-size: 2rem;
}
.navegacion-principal a:hover { /* Pseudoclases o clases de CSS */
  background-color: var(--primario);
  color: var(--oscuro);
}

/* Hero */
.hero {
  background-image: url(../img/hero.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  height: 450px;
  position: relative; /* La clase padre debe tener position: relative */
  margin-bottom: 2rem;
}
.contenido-hero {
  position: absolute; /* para que el hijo pueda usar position: absolute */
  width: 100%;  /* Para no utilizar las coordenadas */
  height: 100%; /* top, right, bottom, left */
  background-color: rgba( 0,0,0,.6 ); /* Sintaxis anterior */
  background-color: rgb( 0 0 0 / 60% ); /* Sintaxis nueva, aunque no soportada por algunos navegadores */
  display: flex;
  flex-direction: column;   /* Cuando se cambia row por column */
  justify-content: center;  /* se usa justify-content para alinear verticalmente */
  align-items: center;      /* y align-items para alinear horizontalmente */
}
.contenido-hero h2,
.contenido-hero p {
  color: var(--blanco);
}
.contenido-hero .ubicacion {
  display: flex;          /* Cuando no se cambia la direccion de flex */
  align-items: flex-end;  /* align-items alinea verticalmente */
}

/* Servicios */
@media (min-width: 768px) {
  .servicios {
    display: grid; /* Activa el uso de las propiedades de Grid */
    grid-template-columns: repeat(3, 1fr);  /* Distrubuye el contenido en columnas */
    column-gap: 1rem; /* Separacion entre columnas */
  }
}
.servicio {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.servicio h3 {
  color: var(--secundario);
  font-weight: normal;
}
.servicio p {
  line-height: 2;
  text-align: center;
}
.servicio .iconos {
  height: 15rem;
  width: 15rem;
  background-color: var(--primario);
  border-radius: 50%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
}

/* Formulario */
.formulario {
  background-color: var(--gris);
  width: min(60rem, 100%);  /* Utiliza el valor mas pequeño */
  margin: 0 auto; /* Usarlo para centrar horizontalmente en caso de que no se tenga un display: flex o se tenga un display: block */
  padding: 2rem;
  border-radius: 1rem;
}
.formulario fieldset {
  border: none;
}
.formulario legend {
  text-align: center;
  font-size: 1.8rem;
  text-transform: uppercase;
  font-weight: bold;
  margin-bottom: 2rem;
  color: var(--primario);
}
@media (min-width: 768px) {
  .contenedor-campos {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto 20rem;
    column-gap: 1rem;
  }
  .campo:nth-child(3),
  .campo:nth-child(4) {
    grid-column: 1 / 3; /* Posicionar un elemento respecto a las columnas */
  }
}
.campo {
  margin-bottom: 1rem;
}
.campo label {
  color: var(--blanco);
  font-weight: bold;
  margin-bottom: .5rem;
  display: block;
}
.campo textarea {
  height: 20rem;
}
.input-text {
  width: 100%;
  border: none;
  padding: 1.5rem;
  border-radius: .5rem;
}

/* Footer */
.footer {
  text-align: center;
}

/* Especificidad: se utilizan las propiedades del selector mas especifico */
/*h1.titulo span {  Selector de combinaciones (clase y elemento html)
  font-size: 2rem;
  color: blue;
}
.titulo span {
  font-size: 2rem;
  color: red;
}
span {
  font-size: 2rem;
  color: green!important; !important salta toda la especificidad (no utilizarlo a menos que sea la ultima opcion)
}

margin-top: 0;  Separacion hacia arriba
margin-right: auto; Separacion a la derecha
margin-bottom: 0; Separacion hacia abajo
margin-left: auto; Separacion a la izquierda
margin: 0 auto 0 auto;  Toma los valores en el orden arriba, derecha, abajo, izquierda

display: block; Coloca los elementos uno debajo del otro
display: inline; Coloca los elementos uno a la derecha del otro

margin: Separacion hacia afuera
padding: Separacion hacia adentro

top: 0
right: 0  Coordenadas para posicionar
bottom: 0 utilizadas por position: absolute
left: 0

grid-template-columns: repeat(3, 1fr);    Las tres opciones
grid-template-columns: 1fr 1fr 1fr;       hacen exactamente
grid-template-columns: 33.3% 33.3% 33.3%; lo mismo
grid-template-rows: 200px 800px Para distribuir filas
grid: 200px 800px / 300px 300px Manera corta para distribuir filas y columnas (grid: rows / columns)
*/